---
- hosts: medley
  vars:
    project_name: medley
    project_user: "{{ project_name }}"
    project_group: "{{ project_name }}"
    project_root: "/var/{{ project_name }}"

  tasks:
    - name: Create application group
      become: true
      group:
        state=present
        name="{{ project_group }}"
      tags:
        - firstrun

    - name: Create application user
      become: true
      user:
        state=present
        name="{{ project_user }}"
        home="{{ project_root }}"
        createhome=no
        system=yes
        append=yes
        groups="{{ project_user }},audio"
      tags:
        - firstrun

    - name: Set application user groups
      become: true
      user:
        name="{{ ansible_user }}"
        group="{{ item }}"
        append=yes
      with_items:
        - "{{ project_user }}"
        - "systemd-journal"
      tags:
        - firstrun

    - name: Create application directories
      become: true
      file:
        path="{{ item }}"
        state=directory
        owner="{{ project_user }}"
        group="{{ project_group }}"
        mode=0775
      with_items:
        - "{{ project_root }}"
        - "{{ project_root }}/db"
        - "{{ project_root }}/storage"
      tags:
        - firstrun

    - name: Install system packages
      become: true
      apt:
        name:
          - alsa-utils
          - python3
          - python3-cryptography
          - nginx-light
        state: latest
      tags:
        - firstrun

    - name: Copy zipapp
      become: true
      copy:
        src: "../medley"
        dest: "{{ project_root }}/medley"
        owner: "{{ project_user }}"
        group: "{{ project_group }}"
        mode: 0775

    - name: Copy asset database
      become: true
      copy:
        src: "../db/assets.sqlite"
        dest: "{{ project_root }}/db/assets.sqlite"
        owner: "{{ project_user }}"
        group: "{{ project_group }}"

    - name: Install nginx vhost
      become: true
      template:
        src: "templates/medley-vhost.j2"
        dest: "/etc/nginx/sites-available/medley"
      notify: Restart Nginx

    - name: Symlink nginx vhost
      become: true
      file:
        src: "/etc/nginx/sites-available/medley"
        dest: "/etc/nginx/sites-enabled/medley"
        state: link

    - name: Install primary systemd service
      become: true
      template:
        src: "templates/medley.service.j2"
        dest: "/etc/systemd/system/medley.service"

    - name: Install supplemental systemd services
      become: true
      copy: src={{ item }} dest=/etc/systemd/system/
      with_items:
        - files/medley-geodb.service
        - files/medley-geodb.timer
        - files/medley-maintenance.service
        - files/medley-maintenance.timer
        - files/medley-headlines.service
        - files/medley-headlines.timer
        - files/medley-bucketpull.service
        - files/medley-bucketpull.timer

    - name: Enable primary systemd service
      become: true
      systemd:
        daemon_reload: yes
        enabled: yes
        masked: no
        name: medley
        state: restarted

    - name: Enable systemd timers
      become: true
      systemd:
        daemon_reload: yes
        enabled: yes
        masked: no
        name: "{{ item }}"
        state: started
      with_items:
        - medley-geodb.timer
        - medley-maintenance.timer
        - medley-headlines.timer
        - medley-bucketpull.timer

    - name: Check server availability
      uri:
        url: "http://localhost:8085/"
        status_code: 200
      register: this
      until: this.status == 200
      retries: 6
      delay: 10

  handlers:
    - name: Restart Nginx
      become: true
      service:
        name: nginx
        state: restarted
