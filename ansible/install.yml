---
# This is a playbook for installing Medley on a production host.
#
# Whatever host runs this playbook should have the following in its
# global Ansible configuration:
#
# - A role called "medley" which the production host is part of.
#
# - A host variable "medley_root" set to the absolute path on the
#   production host of the install directory.
#
# - A host variable "medley_hostname" set to the URL of the
#   production instance.
#
# - A host variable "medley_user" set to the user on the production host that will
#    be running the application.

- hosts: medley

  tasks:
    - name: Create application directories
      file:
        path="{{ item }}"
        state=directory
        mode=0700
      with_items:
        - "{{ medley_root }}"
        - "{{ medley_root }}/db"
        - "{{ medley_root }}/storage"

    - name: Install system packages
      become: true
      package:
        name:
          - alsa-utils
          - python3
          - python3-cryptography
          - python3-evdev
          - httpd
          - g++
          - python3-devel
        state: present

    - name: Copy application
      copy:
        src: "../medley"
        dest: "{{ medley_root }}/medley"
        mode: 0700

    - name: Install Apache vhost
      become: true
      template:
        src: "templates/medley-vhost.conf.j2"
        dest: "/etc/httpd/conf.d/medley.conf"
      notify: Restart Apache

    - name: Install primary systemd service
      template:
        src: "templates/medley.service.j2"
        dest: "~/.config/systemd/user/medley.service"
        mode: 0600

    - name: Install supplemental systemd services
      copy:
        src: "{{ item }}"
        dest: ".config/systemd/user/"
      with_items:
        - files/medley-geodb.service
        - files/medley-geodb.timer
        - files/medley-maintenance.service
        - files/medley-maintenance.timer
        - files/medley-headlines.service
        - files/medley-headlines.timer
        - files/medley-bucketpull.service
        - files/medley-bucketpull.timer

    - name: Enable primary systemd service
      systemd:
        daemon_reload: yes
        scope: "user"
        enabled: yes
        masked: no
        name: medley
        state: restarted

    - name: Enable systemd timers
      systemd:
        daemon_reload: yes
        scope: "user"
        enabled: yes
        masked: no
        name: "{{ item }}"
        state: restarted
      with_items:
        - medley-geodb.timer
        - medley-maintenance.timer
        - medley-headlines.timer
        - medley-bucketpull.timer

    - name: Group membership
      become: true
      user:
        name: "{{ medley_user }}"
        groups: input,audio
        append: yes

    - name: Check server availability
      uri:
        url: "http://localhost:8085/"
        status_code: 200
      register: this
      until: this.status == 200
      retries: 6
      delay: 10

  handlers:
    - name: Restart Apache
      become: true
      service:
        name: httpd
        state: restarted
